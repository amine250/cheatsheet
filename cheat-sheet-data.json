[
  {
    "category": "Linux Commands",
    "items": [
      { "title": "Find file by name in current directory", "content": "find . -maxdepth 2 -name \"file\"" },
      { "title": "List open network sockets of a process", "content": "netstat -aonp | grep <process_name>" },
      {
        "title": "Setup Proxy",
        "content": "export {HTTP,HTTPS}_PROXY=127.0.0.1:8080\nexport {http,https,ftp}_proxy=127.0.0.1:8080"
      }
    ]
  },
  {
    "category": "Bash Snippets",
    "items": [
      {
        "title": "For loop",
        "content": "for i in {1..5}\ndo\n   echo \"Welcome $i times\"\ndone"
      }
    ]
  },
  {
    "category": "Git Commands",
    "items": [
      { "title": "Initialize repository", "content": "git init" },
      { "title": "Add files", "content": "git add ." },
      { "title": "Commit changes", "content": "git commit -m 'Commit message'" }
    ]
  },
  {
    "category": "Kubernetes",
    "items": [
      { "title": "Expose kubernetes pod locally", "content": "# Listen on port 8443 locally, forwarding to the targetPort of the service's port named \"https\" in a pod selected by the service\nkubectl port-forward service/myservice 8443:https\n\n# Listen on port 8888 locally, forwarding to 5000 in the pod\nkubectl port-forward pod/mypod 8888:5000" },
      { "title": "Stop a deployment's pod without restarting", "content": "kubectl scale deployment <deployment> --replicas=0" }
    ]
  },
  {
    "category": "Docker",
    "items": [
      { "title": "Docker stats", "content": "docker stats $(docker ps --format={{.Names}}) --no-stream" }
    ]
  },
  {
    "category": "Terraform",
    "items": [
      { "title": "placeholder", "content": "placeholder" }
    ]
  },
  {
    "category": "Amazon Web Services (AWS)",
    "items": [
      { "title": "CloudWatch Filter to see WAF blocked requests by hostname", "content": "{ ($.Action = \"BLOCK\") && ($.Request.Headers[0].Value = \"www.hostname.com\") }" },
      { "title": "placeholder", "content": "placeholder" }
    ]
  }
]
